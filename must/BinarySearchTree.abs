module BinarySearchTree;

data BTree<A> = Leaf(A)
              | Node(BTree<A>,A,BTree<A>);


def Pair<Bool,Int> find(BTree<Int> t, Int v, Int depth) = case t {
                        Leaf(v_) => Pair(v==v_,depth);
                        Node(t1,v_,t2) => if v>v_
                                          then find(t2,v,depth+1)
                                          else if v<v_
                                               then find(t1,v,depth+1)
                                               else find(Leaf(v_),v,depth); // treat it the same as a leaf
                                          };
def Int sum(BTree<Int> t) = case t {
    Leaf(v) => v;
    Node(t1,v,t2) => v+sum(t1)+sum(t2);
  };


// a balanced tree of depth 15
def BTree<Int> t() = Node(Node(Node(Node(Node(Node(Node(Node(Node(Node(Leaf(-1000000),-999998,Leaf(-999995)),-999961,Node(Leaf(-999961),-999961,Leaf(-999958))),-999957,Node(Node(Leaf(-999957),-999957,Leaf(-999952)),-999952,Node(Leaf(-999937),-999911,Leaf(-999903)))),-999903,Node(Node(Node(Leaf(-999902),-999891,Leaf(-999880)),-999880,Node(Leaf(-999878),-999872,Leaf(-999869))),-999869,Node(Node(Leaf(-999792),-999183,Leaf(-999178)),-999171,Node(Leaf(-999169),-999161,Leaf(-999154))))),-999150,Node(Node(Node(Node(Leaf(-999129),-999102,Leaf(-999018)),-998996,Node(Leaf(-998978),-998978,Leaf(-998969))),-998956,Node(Node(Leaf(-998921),-998767,Leaf(-998302)),-997165,Node(Leaf(-997101),-996809,Leaf(-996595)))),-996477,Node(Node(Node(Leaf(-996449),-996441,Leaf(-996439)),-996405,Node(Leaf(-996393),-996382,Leaf(-996379))),-996371,Node(Node(Leaf(-995962),-995352,Leaf(-995250)),-994954,Node(Leaf(-994848),-994394,Leaf(-994356)))))),-994292,Node(Node(Node(Node(Node(Leaf(-989559),-988758,Leaf(-984028)),-974464,Node(Leaf(-973886),-973335,Leaf(-971398))),-966185,Node(Node(Leaf(-962489),-961496,Leaf(-956705)),-955262,Node(Leaf(-953764),-952659,Leaf(-952200)))),-951458,Node(Node(Node(Leaf(-942680),-942448,Leaf(-941712)),-940035,Node(Leaf(-939730),-939038,Leaf(-938803))),-938462,Node(Node(Leaf(-916819),-894211,Leaf(-891577)),-888499,Node(Leaf(-887235),-883028,Leaf(-863921))))),-863313,Node(Node(Node(Node(Leaf(-863105),-863063,Leaf(-863017)),-863006,Node(Leaf(-862698),-862527,Leaf(-862307))),-862241,Node(Node(Leaf(-857356),-856254,Leaf(-854705)),-850842,Node(Leaf(-847694),-840062,Leaf(-839762)))),-838063,Node(Node(Node(Leaf(-838054),-838024,Leaf(-837089)),-833280,Node(Leaf(-827377),-826077,Leaf(-820760))),-820478,Node(Node(Leaf(-820116),-819396,Leaf(-813123)),-805345,Node(Leaf(-804428),-804361,Leaf(-804044))))))),-803924,Node(Node(Node(Node(Node(Node(Leaf(-803801),-803065,Leaf(-801930)),-800100,Node(Leaf(-799988),-799051,Leaf(-798267))),-796047,Node(Node(Leaf(-795633),-795414,Leaf(-795295)),-795293,Node(Leaf(-793788),-793259,Leaf(-792542)))),-792403,Node(Node(Node(Leaf(-790962),-784300,Leaf(-784230)),-783990,Node(Leaf(-782462),-781840,Leaf(-781279))),-780123,Node(Node(Leaf(-780006),-779567,Leaf(-779163)),-778449,Node(Leaf(-777318),-776497,Leaf(-776436))))),-776292,Node(Node(Node(Node(Leaf(-775573),-773247,Leaf(-759270)),-742292,Node(Leaf(-735006),-712481,Leaf(-711225))),-709388,Node(Node(Leaf(-688260),-686200,Leaf(-680349)),-674629,Node(Leaf(-672321),-666621,Leaf(-666130)))),-662485,Node(Node(Node(Leaf(-660833),-658488,Leaf(-656490)),-656150,Node(Leaf(-651032),-649043,Leaf(-648209))),-647842,Node(Node(Leaf(-647094),-644909,Leaf(-643185)),-642950,Node(Leaf(-642755),-642478,Leaf(-641777)))))),-639907,Node(Node(Node(Node(Node(Leaf(-624835),-496639,Leaf(-489856)),-468402,Node(Leaf(-416702),-412090,Leaf(-350254))),-249455,Node(Node(Leaf(-235312),-195089,Leaf(-194719)),-194052,Node(Leaf(-192545),-190868,Leaf(-188454)))),-187641,Node(Node(Node(Leaf(-186491),-186242,Leaf(-185507)),-185487,Node(Leaf(-183531),-183388,Leaf(-182736))),-182064,Node(Node(Leaf(-178558),-173436,Leaf(-167854)),-161771,Node(Leaf(-160615),-160148,Leaf(-136363))))),-128118,Node(Node(Node(Node(Leaf(-97170),-89206,Leaf(-86020)),-85674,Node(Leaf(-85026),-84870,Leaf(-84039))),-83879,Node(Node(Leaf(-76888),-73637,Leaf(-64402)),-49838,Node(Leaf(-49684),-49370,Leaf(-48982)))),-48756,Node(Node(Node(Leaf(-48362),-47262,Leaf(-45553)),-42565,Node(Leaf(-42184),-41579,Leaf(-36336))),-32553,Node(Node(Leaf(-28102),-27464,Leaf(-24834)),-23091,Node(Leaf(-22921),-22909,Leaf(-21158)))))))),-20828,Node(Node(Node(Node(Node(Node(Node(Leaf(-20726),-20706,Leaf(-19570)),-19297,Node(Leaf(-3223),848,Leaf(1255))),1408,Node(Node(Leaf(12424),55443,Leaf(68655)),73204,Node(Leaf(92565),103266,Leaf(103750)))),106348,Node(Node(Node(Leaf(115363),117605,Leaf(118621)),131166,Node(Leaf(132958),134152,Leaf(139592))),144693,Node(Node(Leaf(145416),146272,Leaf(148118)),148608,Node(Leaf(176096),178918,Leaf(182865))))),196545,Node(Node(Node(Node(Leaf(196546),196546,Leaf(196833)),196952,Node(Leaf(196952),196973,Leaf(197046))),197135,Node(Node(Leaf(199992),200311,Leaf(200899)),203155,Node(Leaf(203800),204207,Leaf(205587)))),205672,Node(Node(Node(Leaf(205737),205835,Leaf(205855)),205897,Node(Leaf(205986),205992,Leaf(206174))),206201,Node(Node(Leaf(206527),206972,Leaf(207039)),207041,Node(Leaf(207440),207823,Leaf(208311)))))),210010,Node(Node(Node(Node(Node(Leaf(210708),211672,Leaf(212291)),212308,Node(Leaf(212345),213016,Leaf(213107))),213298,Node(Node(Leaf(251645),276822,Leaf(286902)),293604,Node(Leaf(301017),329285,Leaf(335716)))),360248,Node(Node(Node(Leaf(360537),360717,Leaf(360992)),361132,Node(Leaf(361290),361359,Leaf(364087))),364632,Node(Node(Leaf(364664),365467,Leaf(368112)),368904,Node(Leaf(369782),371573,Leaf(372166))))),372209,Node(Node(Node(Node(Leaf(372211),372222,Leaf(372225)),372235,Node(Leaf(372240),372245,Leaf(372290))),372295,Node(Node(Leaf(372337),372381,Leaf(372381)),372385,Node(Leaf(372407),372444,Leaf(372536)))),372548,Node(Node(Node(Leaf(372548),372550,Leaf(372556)),372558,Node(Leaf(372594),372594,Leaf(372597))),372603,Node(Node(Leaf(372624),372629,Leaf(372632)),372635,Node(Leaf(372637),372637,Leaf(372637))))))),372638,Node(Node(Node(Node(Node(Node(Leaf(389637),405620,Leaf(419365)),428568,Node(Leaf(494974),645193,Leaf(677547))),702992,Node(Node(Leaf(713521),714606,Leaf(720749)),725060,Node(Leaf(794042),802158,Leaf(802538)))),802922,Node(Node(Node(Leaf(804350),806046,Leaf(810215)),811786,Node(Leaf(812712),813206,Leaf(814990))),817644,Node(Node(Leaf(829924),844921,Leaf(847791)),885350,Node(Leaf(919803),928429,Leaf(965123))))),965854,Node(Node(Node(Node(Leaf(965943),965986,Leaf(967988)),968087,Node(Leaf(969250),971910,Leaf(972050))),972209,Node(Node(Leaf(984422),1039746,Leaf(1044447)),1045863,Node(Leaf(1074170),1078261,Leaf(1095208)))),1112083,Node(Node(Node(Leaf(1120263),1122567,Leaf(1124248)),1125895,Node(Leaf(1129604),1131269,Leaf(1133180))),1142629,Node(Node(Leaf(1143154),1143734,Leaf(1144677)),1151482,Node(Leaf(1151576),1151731,Leaf(1151982)))))),1152502,Node(Node(Node(Node(Node(Leaf(1158513),1159128,Leaf(1162418)),1171181,Node(Leaf(1171291),1171292,Leaf(1180084))),1187338,Node(Node(Leaf(1187379),1187387,Leaf(1187460)),1187463,Node(Leaf(1187475),1187531,Leaf(1187730)))),1187794,Node(Node(Node(Leaf(1189294),1190174,Leaf(1191048)),1194779,Node(Leaf(1194781),1194842,Leaf(1194843))),1194844,Node(Node(Leaf(1194864),1194872,Leaf(1195061)),1198831,Node(Leaf(1207620),1213364,Leaf(1216893))))),1223436,Node(Node(Node(Node(Leaf(1224962),1225840,Leaf(1225887)),1227013,Node(Leaf(1227335),1228845,Leaf(1228917))),1229605,Node(Node(Leaf(1230305),1230313,Leaf(1230456)),1230462,Node(Leaf(1230656),1230884,Leaf(1235724)))),1236211,Node(Node(Node(Leaf(1243294),1243579,Leaf(1244741)),1245912,Node(Leaf(1247504),1247659,Leaf(1248400))),1258885,Node(Node(Leaf(1259961),1271534,Leaf(1271980)),1273136,Node(Leaf(1273290),1276720,Leaf(1276753))))))))),1276841,Node(Node(Node(Node(Node(Node(Node(Node(Leaf(1276864),1276867,Leaf(1276870)),1276891,Node(Leaf(1276900),1276901,Leaf(1276904))),1276906,Node(Node(Leaf(1276940),1277007,Leaf(1277048)),1277098,Node(Leaf(1277103),1277107,Leaf(1277120)))),1277212,Node(Node(Node(Leaf(1279195),1280570,Leaf(1281503)),1281819,Node(Leaf(1282968),1283546,Leaf(1285034))),1285237,Node(Node(Leaf(1285259),1285264,Leaf(1285314)),1285330,Node(Leaf(1285349),1285364,Leaf(1285372))))),1285383,Node(Node(Node(Node(Leaf(1285516),1291024,Leaf(1291186)),1291493,Node(Leaf(1291662),1293915,Leaf(1295640))),1302936,Node(Node(Leaf(1308680),1309304,Leaf(1309977)),1310508,Node(Leaf(1311044),1311430,Leaf(1312463)))),1313021,Node(Node(Node(Leaf(1313304),1313586,Leaf(1313791)),1313918,Node(Leaf(1314020),1314209,Leaf(1314212))),1314222,Node(Node(Leaf(1314240),1314240,Leaf(1314250)),1314361,Node(Leaf(1314584),1314632,Leaf(1314637)))))),1314641,Node(Node(Node(Node(Node(Leaf(1331173),1353660,Leaf(1359848)),1367096,Node(Leaf(1428865),1438508,Leaf(1439214))),1801827,Node(Node(Leaf(1802223),1803307,Leaf(1826782)),1830452,Node(Leaf(1850845),1861566,Leaf(1865697)))),1890848,Node(Node(Node(Leaf(1890853),1891224,Leaf(1891273)),1891832,Node(Leaf(1891895),1891979,Leaf(1892250))),1893432,Node(Node(Leaf(1893660),1893715,Leaf(1894081)),1895076,Node(Leaf(1895587),1895868,Leaf(1895925))))),1896030,Node(Node(Node(Node(Leaf(1896063),1896247,Leaf(1896418)),1896446,Node(Leaf(1896464),1896658,Leaf(1897274))),1897859,Node(Node(Leaf(1949913),1963088,Leaf(1978911)),2008005,Node(Leaf(2019476),2024225,Leaf(2079365)))),2092514,Node(Node(Node(Leaf(2092937),2093266,Leaf(2093351)),2093877,Node(Leaf(2093930),2094005,Leaf(2094400))),2094483,Node(Node(Leaf(2094613),2094764,Leaf(2094794)),2094813,Node(Leaf(2099094),2101338,Leaf(2102608))))))),2102729,Node(Node(Node(Node(Node(Node(Leaf(2102729),2102729,Leaf(2102729)),2102729,Node(Leaf(2102730),2102730,Leaf(2102730))),2102730,Node(Node(Leaf(2106270),2110099,Leaf(2116594)),2116759,Node(Leaf(2117115),2118259,Leaf(2118274)))),2118284,Node(Node(Node(Leaf(2122752),2123911,Leaf(2124289)),2126293,Node(Leaf(2134869),2150331,Leaf(2150437))),2150481,Node(Node(Leaf(2151563),2153885,Leaf(2156926)),2160592,Node(Leaf(2162500),2171226,Leaf(2171414))))),2186833,Node(Node(Node(Node(Leaf(2208353),2304837,Leaf(2366446)),2434639,Node(Leaf(2443022),2455591,Leaf(2470444))),2470643,Node(Node(Leaf(2474829),2475397,Leaf(2476621)),2491924,Node(Leaf(2494712),2500725,Leaf(2501174)))),2502000,Node(Node(Node(Leaf(2509978),2514650,Leaf(2514884)),2515687,Node(Leaf(2515860),2523275,Leaf(2528794))),2544717,Node(Node(Leaf(2565270),2567774,Leaf(2578920)),2651897,Node(Leaf(2652938),2654331,Leaf(2655285)))))),2655984,Node(Node(Node(Node(Node(Leaf(2670164),2675340,Leaf(2676749)),2684278,Node(Leaf(2684373),2684460,Leaf(2684490))),2684684,Node(Node(Leaf(2688662),2688827,Leaf(2689726)),2690901,Node(Leaf(2693247),2710567,Leaf(2722080)))),2731047,Node(Node(Node(Leaf(2731194),2731254,Leaf(2731400)),2731415,Node(Leaf(2733505),2733683,Leaf(2733690))),2734482,Node(Node(Leaf(2734497),2734570,Leaf(2734670)),2734890,Node(Leaf(2735601),2736063,Leaf(2736138))))),2736227,Node(Node(Node(Node(Leaf(2756218),2760401,Leaf(2762194)),2769325,Node(Leaf(2769399),2771119,Leaf(2777389))),2777598,Node(Node(Leaf(2778287),2778489,Leaf(2778573)),2778761,Node(Leaf(2823727),2842682,Leaf(2852639)))),2867617,Node(Node(Node(Leaf(2871033),2881251,Leaf(2887117)),2892451,Node(Leaf(2921395),2951526,Leaf(2952664))),2965320,Node(Node(Leaf(2970162),3105495,Leaf(3106034)),3116131,Node(Leaf(3116227),3117147,Leaf(3117402)))))))),3118082,Node(Node(Node(Node(Node(Node(Node(Leaf(3127404),3132445,Leaf(3139057)),3150009,Node(Leaf(3150743),3162202,Leaf(3162619))),3173695,Node(Node(Leaf(3174823),3176014,Leaf(3176460)),3176585,Node(Leaf(3177419),3177607,Leaf(3178130)))),3179355,Node(Node(Node(Leaf(3181526),3181758,Leaf(3182411)),3182905,Node(Leaf(3192526),3193725,Leaf(3196815))),3220212,Node(Node(Leaf(3220367),3220784,Leaf(3221156)),3221491,Node(Leaf(3221561),3221634,Leaf(3221826))))),3222298,Node(Node(Node(Node(Leaf(3222330),3222436,Leaf(3222447)),3222471,Node(Leaf(3222494),3224611,Leaf(3224694))),3225792,Node(Node(Leaf(3225880),3226602,Leaf(3226706)),3227513,Node(Leaf(3228327),3233063,Leaf(3234575)))),3239006,Node(Node(Node(Leaf(3239384),3239819,Leaf(3239826)),3239836,Node(Leaf(3239844),3239864,Leaf(3240024))),3240090,Node(Node(Leaf(3240102),3240122,Leaf(3240128)),3240129,Node(Leaf(3240207),3240274,Leaf(3240289)))))),3240716,Node(Node(Node(Node(Node(Leaf(3241312),3241925,Leaf(3243074)),3244788,Node(Leaf(3245057),3246499,Leaf(3248535))),3248837,Node(Node(Leaf(3248966),3249117,Leaf(3249188)),3249437,Node(Leaf(3250621),3252332,Leaf(3271559)))),3278993,Node(Node(Node(Leaf(3279013),3280111,Leaf(3280781)),3280827,Node(Leaf(3280898),3281021,Leaf(3281051))),3281248,Node(Node(Leaf(3281638),3282535,Leaf(3282621)),3283185,Node(Leaf(3283213),3283284,Leaf(3283412))))),3283501,Node(Node(Node(Node(Leaf(3283557),3283587,Leaf(3283614)),3283640,Node(Leaf(3283645),3283658,Leaf(3283663))),3283667,Node(Node(Leaf(3283679),3283726,Leaf(3283791)),3284078,Node(Leaf(3284085),3284101,Leaf(3285124)))),3285568,Node(Node(Node(Leaf(3285618),3285649,Leaf(3285653)),3285715,Node(Leaf(3285737),3285807,Leaf(3285844))),3285857,Node(Node(Leaf(3285870),3285880,Leaf(3285880)),3285898,Node(Leaf(3285908),3285912,Leaf(3285949))))))),3285950,Node(Node(Node(Node(Node(Node(Leaf(3288642),3288849,Leaf(3296254)),3298943,Node(Leaf(3299380),3300385,Leaf(3300472))),3301172,Node(Node(Leaf(3301507),3302305,Leaf(3306105)),3313688,Node(Leaf(3313922),3318226,Leaf(3318546)))),3318706,Node(Node(Node(Leaf(3319658),3320109,Leaf(3320129)),3320136,Node(Leaf(3410893),3421888,Leaf(3421957))),3422035,Node(Node(Leaf(3422532),3422550,Leaf(3422589)),3422799,Node(Leaf(3424898),3426191,Leaf(3426522))))),3426851,Node(Node(Node(Node(Leaf(3426855),3426856,Leaf(3426857)),3426868,Node(Leaf(3426870),3426876,Leaf(3426902))),3426951,Node(Node(Leaf(3428104),3429700,Leaf(3431192)),3431836,Node(Leaf(3431844),3431848,Leaf(3431909)))),3431951,Node(Node(Node(Leaf(3431951),3431952,Leaf(3431955)),3431967,Node(Leaf(3431985),3431998,Leaf(3432131))),3432137,Node(Node(Leaf(3432173),3432186,Leaf(3432346)),3432477,Node(Leaf(3432548),3432589,Leaf(3432629)))))),3432630,Node(Node(Node(Node(Node(Leaf(3445352),3448999,Leaf(3451439)),3453902,Node(Leaf(3465304),3470554,Leaf(3479616))),3509502,Node(Node(Leaf(3510345),3512512,Leaf(3519106)),3526587,Node(Leaf(3539509),3541023,Leaf(3541076)))),3541286,Node(Node(Node(Leaf(3541327),3541512,Leaf(3541514)),3541515,Node(Leaf(3541515),3541517,Leaf(3541518))),3541527,Node(Node(Leaf(3541572),3542069,Leaf(3542209)),3543421,Node(Leaf(3544795),3545428,Leaf(3547285))))),3549428,Node(Node(Node(Node(Leaf(3549481),3549498,Leaf(3549745)),3549806,Node(Leaf(3549808),3549832,Leaf(3549838))),3549846,Node(Node(Leaf(3549846),3549850,Leaf(3549883)),3549885,Node(Leaf(3554635),3555801,Leaf(3556171)))),3556839,Node(Node(Node(Leaf(3559294),3574304,Leaf(3579374)),3589295,Node(Leaf(3589849),3590021,Leaf(3590839))),3593169,Node(Node(Leaf(3595317),3596281,Leaf(3599333)),3609258,Node(Leaf(3610829),3613069,Leaf(3626324)))))))))),3654706,Node(Node(Node(Node(Node(Node(Node(Node(Node(Leaf(3654706),3654706,Leaf(3654706)),3654707,Node(Leaf(3654707),3654707,Leaf(3654707))),3654708,Node(Node(Leaf(3654708),3654708,Leaf(3654708)),3654708,Node(Leaf(3654709),3654709,Leaf(3654709)))),3654709,Node(Node(Node(Leaf(3654711),3654717,Leaf(3654718)),3654729,Node(Leaf(3654730),3654731,Leaf(3654735))),3654738,Node(Node(Leaf(3654739),3654739,Leaf(3654739)),3654739,Node(Leaf(3654740),3654747,Leaf(3654755))))),3654756,Node(Node(Node(Node(Leaf(3655873),3656093,Leaf(3656554)),3658219,Node(Leaf(3658567),3660057,Leaf(3660101))),3660113,Node(Node(Leaf(3660345),3660875,Leaf(3661248)),3661809,Node(Leaf(3663333),3663702,Leaf(3665727)))),3666787,Node(Node(Node(Leaf(3667278),3669368,Leaf(3669381)),3669494,Node(Leaf(3670674),3671169,Leaf(3674459))),3675356,Node(Node(Leaf(3676078),3676312,Leaf(3676343)),3678805,Node(Leaf(3679912),3680742,Leaf(3680763)))))),3685354,Node(Node(Node(Node(Node(Leaf(3685883),3686270,Leaf(3686978)),3688000,Node(Leaf(3688218),3688357,Leaf(3689176))),3689434,Node(Node(Leaf(3690729),3691670,Leaf(3692624)),3694596,Node(Leaf(3694622),3694674,Leaf(3694713)))),3694840,Node(Node(Node(Leaf(3695018),3695176,Leaf(3695182)),3695189,Node(Leaf(3695220),3695223,Leaf(3695226))),3695235,Node(Node(Leaf(3696921),3697272,Leaf(3697817)),3698375,Node(Leaf(3698410),3698413,Leaf(3698507))))),3698532,Node(Node(Node(Node(Leaf(3698577),3698581,Leaf(3698584)),3698589,Node(Leaf(3698676),3698691,Leaf(3698882))),3698985,Node(Node(Leaf(3699891),3700508,Leaf(3700589)),3701206,Node(Leaf(3701291),3701310,Leaf(3701317)))),3701337,Node(Node(Node(Leaf(3701337),3701342,Leaf(3701342)),3701387,Node(Leaf(3701918),3703414,Leaf(3703575))),3704191,Node(Node(Leaf(3704223),3704230,Leaf(3704237)),3704244,Node(Leaf(3704374),3704428,Leaf(3704440))))))),3704484,Node(Node(Node(Node(Node(Node(Leaf(3704520),3704553,Leaf(3704586)),3704659,Node(Leaf(3705234),3705440,Leaf(3706508))),3706635,Node(Node(Leaf(3707088),3707300,Leaf(3707545)),3708917,Node(Leaf(3709127),3709396,Leaf(3709461)))),3709745,Node(Node(Node(Leaf(3709749),3709775,Leaf(3709808)),3709961,Node(Leaf(3709961),3709962,Leaf(3709993))),3709996,Node(Node(Leaf(3710085),3710085,Leaf(3710134)),3710170,Node(Leaf(3710214),3710226,Leaf(3710252))))),3710365,Node(Node(Node(Node(Leaf(3710392),3710441,Leaf(3712242)),3712548,Node(Leaf(3712807),3713180,Leaf(3713359))),3713622,Node(Node(Leaf(3713663),3713669,Leaf(3713690)),3713699,Node(Leaf(3713699),3713699,Leaf(3713722)))),3713778,Node(Node(Node(Leaf(3713843),3713909,Leaf(3714019)),3714354,Node(Leaf(3714391),3714438,Leaf(3714439))),3714492,Node(Node(Leaf(3714717),3714719,Leaf(3714991)),3715014,Node(Leaf(3715185),3715480,Leaf(3715696)))))),3715830,Node(Node(Node(Node(Node(Leaf(3716901),3716943,Leaf(3718358)),3718409,Node(Leaf(3718487),3718506,Leaf(3718577))),3718634,Node(Node(Leaf(3721032),3721106,Leaf(3723563)),3723878,Node(Leaf(3724490),3724715,Leaf(3726829)))),3728001,Node(Node(Node(Leaf(3731756),3732345,Leaf(3733714)),3734329,Node(Leaf(3737886),3739658,Leaf(3740915))),3744379,Node(Node(Leaf(3744414),3744451,Leaf(3744459)),3744495,Node(Leaf(3746919),3748271,Leaf(3750344))))),3751225,Node(Node(Node(Node(Leaf(3751313),3751320,Leaf(3751360)),3751376,Node(Leaf(3751377),3751396,Leaf(3751400))),3751425,Node(Node(Leaf(3751459),3751478,Leaf(3751517)),3751569,Node(Leaf(3751595),3751620,Leaf(3751718)))),3751720,Node(Node(Node(Leaf(3751720),3751789,Leaf(3751915)),3752217,Node(Leaf(3752284),3752291,Leaf(3752499))),3752772,Node(Node(Leaf(3752778),3752797,Leaf(3752816)),3752933,Node(Leaf(3753002),3753091,Leaf(3753172)))))))),3753284,Node(Node(Node(Node(Node(Node(Node(Leaf(3753386),3756626,Leaf(3756641)),3756641,Node(Leaf(3756729),3756761,Leaf(3757082))),3757563,Node(Node(Leaf(3757630),3757651,Leaf(3757668)),3757691,Node(Leaf(3757720),3757724,Leaf(3757728)))),3757728,Node(Node(Node(Leaf(3757744),3757845,Leaf(3757932)),3758006,Node(Leaf(3758031),3758192,Leaf(3758363))),3758503,Node(Node(Leaf(3759137),3759800,Leaf(3759911)),3761800,Node(Leaf(3761827),3762225,Leaf(3762274))))),3762362,Node(Node(Node(Node(Leaf(3762366),3762390,Leaf(3762392)),3762417,Node(Leaf(3762450),3762473,Leaf(3762477))),3762478,Node(Node(Leaf(3762555),3762667,Leaf(3762681)),3762691,Node(Leaf(3762802),3763690,Leaf(3764066)))),3764098,Node(Node(Node(Leaf(3764204),3764212,Leaf(3764242)),3764252,Node(Leaf(3764260),3764290,Leaf(3764299))),3764307,Node(Node(Leaf(3764743),3764858,Leaf(3766844)),3766972,Node(Leaf(3767536),3770556,Leaf(3771129)))))),3771260,Node(Node(Node(Node(Node(Leaf(3771260),3771262,Leaf(3771267)),3771278,Node(Leaf(3771282),3771294,Leaf(3771300))),3771327,Node(Node(Leaf(3771329),3771349,Leaf(3771352)),3771375,Node(Leaf(3771426),3771429,Leaf(3771462)))),3771472,Node(Node(Node(Leaf(3771486),3771536,Leaf(3771593)),3771628,Node(Leaf(3771648),3771866,Leaf(3771905))),3772052,Node(Node(Leaf(3772078),3772200,Leaf(3772234)),3772437,Node(Leaf(3772615),3772760,Leaf(3773066))))),3774114,Node(Node(Node(Node(Leaf(3774171),3774333,Leaf(3774618)),3774798,Node(Leaf(3774918),3775163,Leaf(3777117))),3778522,Node(Node(Leaf(3779026),3779208,Leaf(3780244)),3780361,Node(Leaf(3780362),3780364,Leaf(3780406)))),3780445,Node(Node(Node(Leaf(3780458),3780496,Leaf(3780497)),3780510,Node(Leaf(3780512),3780549,Leaf(3780549))),3780585,Node(Node(Leaf(3780591),3780597,Leaf(3780604)),3780617,Node(Leaf(3780618),3780618,Leaf(3780618))))))),3780618,Node(Node(Node(Node(Node(Node(Leaf(3780618),3780618,Leaf(3780620)),3780620,Node(Leaf(3780620),3780622,Leaf(3780622))),3780622,Node(Node(Leaf(3780936),3781128,Leaf(3781136)),3781190,Node(Leaf(3781195),3781216,Leaf(3781216)))),3781218,Node(Node(Node(Leaf(3781220),3781231,Leaf(3781232)),3781248,Node(Leaf(3781256),3781258,Leaf(3781258))),3781258,Node(Node(Leaf(3781262),3781311,Leaf(3781334)),3781383,Node(Leaf(3781398),3781406,Leaf(3781430))))),3781615,Node(Node(Node(Node(Leaf(3782099),3782187,Leaf(3782356)),3782415,Node(Leaf(3782692),3782957,Leaf(3783017))),3783338,Node(Node(Leaf(3783678),3783678,Leaf(3783871)),3783926,Node(Leaf(3784272),3784852,Leaf(3785080)))),3785137,Node(Node(Node(Leaf(3785165),3785168,Leaf(3785168)),3785179,Node(Leaf(3785195),3785215,Leaf(3785223))),3785224,Node(Node(Leaf(3785230),3785231,Leaf(3785248)),3785249,Node(Leaf(3785251),3785270,Leaf(3785272)))))),3785272,Node(Node(Node(Node(Node(Leaf(3785276),3785289,Leaf(3785290)),3785296,Node(Leaf(3785306),3785320,Leaf(3785330))),3785339,Node(Node(Leaf(3785358),3785367,Leaf(3785377)),3785395,Node(Leaf(3785395),3785395,Leaf(3785397)))),3785397,Node(Node(Node(Leaf(3785404),3785405,Leaf(3785405)),3785406,Node(Leaf(3785536),3785661,Leaf(3785705))),3785714,Node(Node(Leaf(3785720),3785761,Leaf(3785788)),3785849,Node(Leaf(3785861),3785883,Leaf(3785932))))),3786249,Node(Node(Node(Node(Leaf(3786258),3786278,Leaf(3786283)),3786288,Node(Leaf(3786288),3786289,Leaf(3786328))),3786358,Node(Node(Leaf(3786387),3786447,Leaf(3786519)),3786589,Node(Leaf(3786648),3786757,Leaf(3786962)))),3787046,Node(Node(Node(Leaf(3787078),3787102,Leaf(3787125)),3787143,Node(Leaf(3787150),3787155,Leaf(3787164))),3787169,Node(Node(Leaf(3787169),3787169,Leaf(3787170)),3787170,Node(Leaf(3787170),3787175,Leaf(3787175))))))))),3787183,Node(Node(Node(Node(Node(Node(Node(Node(Leaf(3793325),3896497,Leaf(4111423)),4247438,Node(Leaf(4273906),4281567,Leaf(4283974))),4284780,Node(Node(Leaf(4368865),4374484,Leaf(4403486)),4405243,Node(Leaf(4411652),4429690,Leaf(4442320)))),4444067,Node(Node(Node(Leaf(4499512),4543025,Leaf(4543647)),4546123,Node(Leaf(4581644),4613828,Leaf(4635122))),4639547,Node(Node(Leaf(4647182),4668081,Leaf(4668098)),4669370,Node(Leaf(4687564),4692097,Leaf(4714647))))),4718485,Node(Node(Node(Node(Leaf(4718514),4718531,Leaf(4718531)),4718531,Node(Leaf(4718642),4721522,Leaf(4726487))),4729465,Node(Node(Leaf(4749699),4751147,Leaf(4765806)),4769343,Node(Leaf(4772353),4776074,Leaf(4777191)))),4777424,Node(Node(Node(Leaf(4778376),4778849,Leaf(4811342)),4816529,Node(Leaf(4816679),4817053,Leaf(4817249))),4817566,Node(Node(Leaf(4817785),4819617,Leaf(4821084)),4840554,Node(Leaf(4840582),4840802,Leaf(4840808)))))),4840853,Node(Node(Node(Node(Node(Leaf(4841241),4841413,Leaf(4841430)),4841444,Node(Leaf(4841455),4841769,Leaf(4841801))),4842173,Node(Node(Leaf(4842660),4843857,Leaf(4845824)),4846355,Node(Leaf(4846526),4846617,Leaf(4846641)))),4846649,Node(Node(Node(Leaf(4847669),4848219,Leaf(4848587)),4849616,Node(Leaf(4849697),4849728,Leaf(4849752))),4849784,Node(Node(Leaf(4851580),4857873,Leaf(4858383)),4865943,Node(Leaf(4866072),4866521,Leaf(4866947))))),4867463,Node(Node(Node(Node(Leaf(4867520),4867525,Leaf(4867614)),4867726,Node(Leaf(4867747),4867763,Leaf(4868017))),4868525,Node(Node(Leaf(4868526),4868555,Leaf(4868583)),4868614,Node(Leaf(4868616),4868616,Leaf(4868616)))),4868616,Node(Node(Node(Leaf(4868804),4868919,Leaf(4868971)),4868996,Node(Leaf(4869009),4869165,Leaf(4869181))),4869246,Node(Node(Leaf(4869250),4870530,Leaf(4871203)),4872073,Node(Leaf(4872499),4872579,Leaf(4872593))))))),4872605,Node(Node(Node(Node(Node(Node(Leaf(4872677),4872792,Leaf(4872802)),4872810,Node(Leaf(4873291),4874416,Leaf(4874422))),4874485,Node(Node(Leaf(4874487),4874491,Leaf(4874551)),4874570,Node(Leaf(4874673),4874732,Leaf(4874841)))),4875011,Node(Node(Node(Leaf(4875021),4875024,Leaf(4875024)),4875029,Node(Leaf(4875045),4875063,Leaf(4875068))),4875069,Node(Node(Leaf(4875082),4875088,Leaf(4875097)),4875123,Node(Leaf(4875123),4875134,Leaf(4875138))))),4875146,Node(Node(Node(Node(Leaf(4875190),4875194,Leaf(4875196)),4875220,Node(Leaf(4875228),4875228,Leaf(4875234))),4875252,Node(Node(Leaf(4875942),4876124,Leaf(4876446)),4876557,Node(Leaf(4876577),4876580,Leaf(4877151)))),4877318,Node(Node(Node(Leaf(4877318),4877318,Leaf(4877318)),4877318,Node(Leaf(4877319),4877319,Leaf(4877320))),4877320,Node(Node(Leaf(4877321),4877331,Leaf(4877405)),4877441,Node(Leaf(4877444),4877452,Leaf(4877457)))))),4877460,Node(Node(Node(Node(Node(Leaf(4916795),5062580,Leaf(5080352)),5095223,Node(Leaf(5121528),5157229,Leaf(5172208))),5177666,Node(Node(Leaf(5181668),5185498,Leaf(5270888)),5296615,Node(Leaf(5298880),5304133,Leaf(5316783)))),5327565,Node(Node(Node(Leaf(5327910),5330982,Leaf(5337302)),5337405,Node(Leaf(5337826),5338798,Leaf(5338896))),5338956,Node(Node(Leaf(5339023),5339080,Leaf(5339268)),5339281,Node(Leaf(5339435),5339456,Leaf(5342287))))),5344363,Node(Node(Node(Node(Leaf(5344387),5344391,Leaf(5344398)),5344417,Node(Leaf(5344420),5344421,Leaf(5344422))),5344424,Node(Node(Leaf(5344732),5344798,Leaf(5344903)),5345168,Node(Leaf(5345645),5345785,Leaf(5347321)))),5347348,Node(Node(Node(Leaf(5347506),5347600,Leaf(5347718)),5347790,Node(Leaf(5347904),5348074,Leaf(5348418))),5348691,Node(Node(Leaf(5348713),5348725,Leaf(5348730)),5348745,Node(Leaf(5348867),5348888,Leaf(5348985)))))))),5349012,Node(Node(Node(Node(Node(Node(Node(Leaf(5350151),5351168,Leaf(5356182)),5357093,Node(Leaf(5357396),5357484,Leaf(5360597))),5360631,Node(Node(Leaf(5360757),5360891,Leaf(5361001)),5361087,Node(Leaf(5361216),5361291,Leaf(5362464)))),5362593,Node(Node(Node(Leaf(5363942),5364534,Leaf(5364795)),5364804,Node(Leaf(5366761),5367354,Leaf(5368380))),5368934,Node(Node(Leaf(5369223),5369227,Leaf(5372072)),5376020,Node(Leaf(5376156),5376300,Leaf(5377128))))),5378118,Node(Node(Node(Node(Leaf(5378627),5381078,Leaf(5384000)),5384410,Node(Leaf(5387489),5417382,Leaf(5417679))),5425456,Node(Node(Leaf(5445398),5449739,Leaf(5452764)),5455561,Node(Leaf(5479791),5500398,Leaf(5508905)))),5510238,Node(Node(Node(Leaf(5510253),5510256,Leaf(5510380)),5510579,Node(Leaf(5510656),5510664,Leaf(5510673))),5510745,Node(Node(Leaf(5510746),5510748,Leaf(5510801)),5510836,Node(Leaf(5510890),5510897,Leaf(5510906)))))),5510914,Node(Node(Node(Node(Node(Leaf(5513151),5513372,Leaf(5513805)),5514162,Node(Leaf(5514168),5514190,Leaf(5514537))),5514649,Node(Node(Leaf(5514670),5514680,Leaf(5515218)),5515670,Node(Leaf(5515810),5516108,Leaf(5519265)))),5520553,Node(Node(Node(Leaf(5521683),5522446,Leaf(5524774)),5527927,Node(Leaf(5528314),5528434,Leaf(5532839))),5532849,Node(Node(Leaf(5534267),5538994,Leaf(5540246)),5540414,Node(Leaf(5541535),5542085,Leaf(5543918))))),5545454,Node(Node(Node(Node(Leaf(5545454),5546270,Leaf(5546983)),5547173,Node(Leaf(5547182),5547193,Leaf(5547237))),5547335,Node(Node(Leaf(5550579),5557373,Leaf(5558302)),5605519,Node(Leaf(5611523),5616971,Leaf(5624306)))),5628919,Node(Node(Node(Leaf(5651357),5668418,Leaf(5679252)),5681114,Node(Leaf(5686856),5692415,Leaf(5693980))),5695894,Node(Node(Leaf(5701176),5708635,Leaf(5722129)),5725628,Node(Leaf(5726455),5726659,Leaf(5728486))))))),5733542,Node(Node(Node(Node(Node(Node(Leaf(5734180),5734492,Leaf(5736035)),5737774,Node(Leaf(5737966),5738003,Leaf(5740625))),5741841,Node(Node(Leaf(5745244),5746558,Leaf(5746565)),5748276,Node(Leaf(5762634),5764560,Leaf(5771524)))),5776358,Node(Node(Node(Leaf(5818279),5826036,Leaf(5835064)),5848373,Node(Leaf(5907333),5916560,Leaf(5924691))),5925837,Node(Node(Leaf(5926410),5926662,Leaf(5926762)),5926971,Node(Leaf(5928679),5943275,Leaf(5949354))))),5963241,Node(Node(Node(Node(Leaf(5968107),5970195,Leaf(6006511)),6014043,Node(Leaf(6210083),6271020,Leaf(6271691))),6276128,Node(Node(Leaf(6282027),6286397,Leaf(6287170)),6289588,Node(Leaf(6302349),6302368,Leaf(6324720)))),6327554,Node(Node(Node(Leaf(6329395),6344694,Leaf(6348634)),6350482,Node(Leaf(6388362),6400909,Leaf(6422127))),6428316,Node(Node(Leaf(6429524),6430093,Leaf(6431143)),6432062,Node(Leaf(6432134),6432150,Leaf(6432190)))))),6432370,Node(Node(Node(Node(Node(Leaf(6434465),6435082,Leaf(6442473)),6449364,Node(Leaf(6450420),6455980,Leaf(6458025))),6458214,Node(Node(Leaf(6458229),6458262,Leaf(6458514)),6458520,Node(Leaf(6458528),6458543,Leaf(6458729)))),6458867,Node(Node(Node(Leaf(6470438),6471464,Leaf(6551980)),6573123,Node(Leaf(6631399),6667818,Leaf(6695675))),6707288,Node(Node(Leaf(6711475),6713517,Leaf(6718147)),6745274,Node(Leaf(6792174),6818937,Leaf(6858692))))),6859222,Node(Node(Node(Node(Leaf(6869527),7160939,Leaf(7508252)),7513282,Node(Leaf(7561675),7644109,Leaf(8298141))),8331405,Node(Node(Leaf(8495230),8992949,Leaf(9294592)),9392647,Node(Leaf(9439925),9463123,Leaf(9544310)))),9582004,Node(Node(Node(Leaf(9598153),9616425,Leaf(9628026)),9632756,Node(Leaf(9634245),9634487,Leaf(9634850))),9635335,Node(Node(Leaf(9657334),9663365,Leaf(9665174)),9742475,Node(Leaf(9786366),9794600,Leaf(9884724)))))))))));


{
  Pair<Bool,Int> res1 = find(t(),-128118,0);
  Pair<Bool,Int> res2 = find(t(),-128119,0);
  Pair<Bool,Int> res3 = find(t(),9665174,0);
  Pair<Bool,Int> res4 = find(t(),9665175,0);
  Int res5 = sum(t());
  println(toString(res1));
  println(toString(res2));
  println(toString(res3));
  println(toString(res4));
  println(toString(res5));
}